+ NGPUS=4
+ PY_ARGS='--cfg_file cfgs/lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1.yaml'
+ true
+ PORT=18024
++ nc -z 127.0.0.1 18024
++ echo 1
+ status=1
+ '[' 1 '!=' 0 ']'
+ break
+ echo 18024
18024
+ python -m torch.distributed.launch --nproc_per_node=4 --rdzv_endpoint=localhost:18024 train.py --launcher pytorch --cfg_file cfgs/lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1.yaml
/home/tz98/anaconda3/envs/continual-da/lib/python3.8/site-packages/torch/distributed/launch.py:163: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
  logger.warn(
The module torch.distributed.launch is deprecated and going to be removed in future.Migrate to torch.distributed.run
WARNING:torch.distributed.run:--use_env is deprecated and will be removed in future releases.
 Please read local_rank from `os.environ('LOCAL_RANK')` instead.
INFO:torch.distributed.launcher.api:Starting elastic_operator with launch configs:
  entrypoint       : train.py
  min_nodes        : 1
  max_nodes        : 1
  nproc_per_node   : 4
  run_id           : none
  rdzv_backend     : static
  rdzv_endpoint    : localhost:18024
  rdzv_configs     : {'rank': 0, 'timeout': 900}
  max_restarts     : 3
  monitor_interval : 5
  log_dir          : None
  metrics_cfg      : {}

INFO:torch.distributed.elastic.agent.server.local_elastic_agent:log directory set to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx
INFO:torch.distributed.elastic.agent.server.api:[default] starting workers for entrypoint: python
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous'ing worker group
/home/tz98/anaconda3/envs/continual-da/lib/python3.8/site-packages/torch/distributed/elastic/utils/store.py:52: FutureWarning: This is an experimental API and will be changed in future.
  warnings.warn(
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous complete for workers. Result:
  restart_count=0
  master_addr=localhost
  master_port=18024
  group_rank=0
  group_world_size=1
  local_ranks=[0, 1, 2, 3]
  role_ranks=[0, 1, 2, 3]
  global_ranks=[0, 1, 2, 3]
  role_world_sizes=[4, 4, 4, 4]
  global_world_sizes=[4, 4, 4, 4]

INFO:torch.distributed.elastic.agent.server.api:[default] Starting worker group
INFO:torch.distributed.elastic.multiprocessing:Setting worker0 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_0/0/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker1 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_0/1/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker2 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_0/2/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker3 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_0/3/error.json
2023-02-06 15:33:02,003   INFO  **********************Start logging**********************
2023-02-06 15:33:02,003   INFO  CUDA_VISIBLE_DEVICES=0,1,2,3
2023-02-06 15:33:02,003   INFO  total_batch_size: 8
2023-02-06 15:33:02,003   INFO  cfg_file         cfgs/lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1.yaml
2023-02-06 15:33:02,003   INFO  batch_size       2
2023-02-06 15:33:02,003   INFO  epochs           60
2023-02-06 15:33:02,003   INFO  workers          4
2023-02-06 15:33:02,003   INFO  extra_tag        default
2023-02-06 15:33:02,003   INFO  ckpt             None
2023-02-06 15:33:02,003   INFO  pretrained_model None
2023-02-06 15:33:02,003   INFO  launcher         pytorch
2023-02-06 15:33:02,004   INFO  tcp_port         18888
2023-02-06 15:33:02,004   INFO  sync_bn          False
2023-02-06 15:33:02,004   INFO  fix_random_seed  False
2023-02-06 15:33:02,004   INFO  ckpt_save_interval 10
2023-02-06 15:33:02,004   INFO  local_rank       0
2023-02-06 15:33:02,004   INFO  max_ckpt_save_num 30
2023-02-06 15:33:02,004   INFO  merge_all_iters_to_one_epoch False
2023-02-06 15:33:02,004   INFO  set_cfgs         None
2023-02-06 15:33:02,004   INFO  empty_cache_every -1
2023-02-06 15:33:02,004   INFO  max_waiting_mins 0
2023-02-06 15:33:02,004   INFO  start_epoch      0
2023-02-06 15:33:02,004   INFO  num_epochs_to_eval 0
2023-02-06 15:33:02,004   INFO  save_to_file     False
2023-02-06 15:33:02,004   INFO  wandb_project    None
2023-02-06 15:33:02,004   INFO  wandb_group      None
2023-02-06 15:33:02,004   INFO  hq_path          None
2023-02-06 15:33:02,004   INFO  cfg.ROOT_DIR: /home/tz98/projects/continual-DA/downstream/OpenPCDet
2023-02-06 15:33:02,005   INFO  cfg.LOCAL_RANK: 0
2023-02-06 15:33:02,005   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2023-02-06 15:33:02,005   INFO  
cfg.DATA_CONFIG = edict()
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/lyft
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 90.4, 40, 1]
2023-02-06 15:33:02,005   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2023-02-06 15:33:02,005   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2023-02-06 15:33:02,005   INFO  
cfg.DATA_CONFIG.LOAD_HISTORY = edict()
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.DATA_PATH: ../data/lyft/training/combined_lidar
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.LIMIT_NUM: 5
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.TRANS_MAT_PATH: ../data/lyft/training/trans_mat
2023-02-06 15:33:02,005   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.VOXEL_SIZE: -1
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.FORWARD_ONLY: True
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.CACHE_ROOT: /scratch/hindsight_travis_cache/
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.HISTORY_AUG: True
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points', 'p2_score', 'history_scans']
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2023-02-06 15:33:02,006   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': []}, 'VALIDATE_NUM_POINT_LIMIT': {'Car': 10, 'Pedestrian': 3, 'Cyclist': 3}, 'SAMPLE_GROUPS': ['Car:10', 'Pedestrian:5', 'Cyclist:5'], 'VALIDATE_EXTRA_OFFSET': [0.0, 0.0, 0.2], 'VALIDATE_EXTRA_WIDTH': [0.3, 0.3, 0.5], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}, {'NAME': 'point_quantize', 'VOXEL_SIZE': 0.3}]
2023-02-06 15:33:02,006   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'sample_points', 'NUM_POINTS': {'train': 16384, 'test': 16384}}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}]
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/lyft_dataset_hindsight.yaml
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.load_p2_score: /home/yy785/datasets/lyft_release_test/training/pp_score_fw70_2m_r0.3
2023-02-06 15:33:02,006   INFO  cfg.DATA_CONFIG.load_p2_test_score: /home/yy785/datasets/lyft_release_test/training/pp_score_fw70_2m_r0.3_test
2023-02-06 15:33:02,007   INFO  
cfg.MODEL = edict()
2023-02-06 15:33:02,007   INFO  cfg.MODEL.NAME: PointRCNN
2023-02-06 15:33:02,007   INFO  
cfg.MODEL.HISTORY_QUERY = edict()
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.NAME: SparseResUQueryNet
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone: Res16UNet14E
2023-02-06 15:33:02,007   INFO  
cfg.MODEL.HISTORY_QUERY.history_backbone_config = edict()
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone_config.bn_momentum: 0.05
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone_config.conv1_kernel_size: 3
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone_config.final_feature_size: 64
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.simple_conv_kernel_size: 5
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.extra_conv: False
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.mode: update_point_features
2023-02-06 15:33:02,007   INFO  
cfg.MODEL.HISTORY_QUERY.P2_LOSS_CONFIG = edict()
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.P2_LOSS_CONFIG.LOSS_FN: l1
2023-02-06 15:33:02,007   INFO  cfg.MODEL.HISTORY_QUERY.TWO_STAGE: pt1
2023-02-06 15:33:02,007   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2023-02-06 15:33:02,007   INFO  cfg.MODEL.BACKBONE_3D.NAME: PointNet2MSG
2023-02-06 15:33:02,007   INFO  
cfg.MODEL.BACKBONE_3D.SA_CONFIG = edict()
2023-02-06 15:33:02,008   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.NPOINTS: [4096, 1024, 256, 64]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.RADIUS: [[0.1, 0.5], [0.5, 1.0], [1.0, 2.0], [2.0, 4.0]]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.NSAMPLE: [[16, 32], [16, 32], [16, 32], [16, 32]]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.MLPS: [[[16, 16, 32], [32, 32, 64]], [[64, 64, 128], [64, 96, 128]], [[128, 196, 256], [128, 196, 256]], [[256, 256, 512], [256, 384, 512]]]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.BACKBONE_3D.FP_MLPS: [[128, 128], [256, 256], [512, 512], [512, 512]]
2023-02-06 15:33:02,008   INFO  
cfg.MODEL.POINT_HEAD = edict()
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.NAME: PointHeadBox
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.CLS_FC: [256, 256]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.REG_FC: [256, 256]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.CLASS_AGNOSTIC: False
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.USE_POINT_FEATURES_BEFORE_FUSION: False
2023-02-06 15:33:02,008   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG = edict()
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER: PointResidualCoder
2023-02-06 15:33:02,008   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG = edict()
2023-02-06 15:33:02,008   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.use_mean_size: True
2023-02-06 15:33:02,009   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.mean_size: [[3.9, 1.6, 1.56], [0.8, 0.6, 1.73], [1.76, 0.6, 1.73]]
2023-02-06 15:33:02,009   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG = edict()
2023-02-06 15:33:02,009   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_REG: WeightedSmoothL1Loss
2023-02-06 15:33:02,009   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2023-02-06 15:33:02,009   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2023-02-06 15:33:02,009   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_box_weight: 1.0
2023-02-06 15:33:02,009   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-02-06 15:33:02,009   INFO  
cfg.MODEL.ROI_HEAD = edict()
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.NAME: PointRCNNHead
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2023-02-06 15:33:02,009   INFO  
cfg.MODEL.ROI_HEAD.ROI_POINT_POOL = edict()
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.POOL_EXTRA_WIDTH: [0.0, 0.0, 0.0]
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.NUM_SAMPLED_POINTS: 512
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.DEPTH_NORMALIZER: 70.0
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.XYZ_UP_LAYER: [128, 128]
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [256, 256]
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [256, 256]
2023-02-06 15:33:02,009   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.0
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.USE_BN: False
2023-02-06 15:33:02,010   INFO  
cfg.MODEL.ROI_HEAD.SA_CONFIG = edict()
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.NPOINTS: [128, 32, -1]
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.RADIUS: [0.2, 0.4, 100]
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.NSAMPLE: [16, 16, 16]
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.MLPS: [[128, 128, 128], [128, 128, 256], [256, 256, 512]]
2023-02-06 15:33:02,010   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG = edict()
2023-02-06 15:33:02,010   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN = edict()
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2023-02-06 15:33:02,010   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST = edict()
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 9000
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.85
2023-02-06 15:33:02,010   INFO  
cfg.MODEL.ROI_HEAD.TARGET_CONFIG = edict()
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: cls
2023-02-06 15:33:02,010   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.6
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.45
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2023-02-06 15:33:02,011   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG = edict()
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2023-02-06 15:33:02,011   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2023-02-06 15:33:02,011   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-02-06 15:33:02,011   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2023-02-06 15:33:02,011   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-02-06 15:33:02,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-02-06 15:33:02,011   INFO  
cfg.OPTIMIZATION = edict()
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 2
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 60
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.LR: 0.01
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2023-02-06 15:33:02,011   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2023-02-06 15:33:02,011   INFO  cfg.TAG: pointrcnn_hindsight_p2_2staged_train_pt1
2023-02-06 15:33:02,011   INFO  cfg.EXP_GROUP_PATH: lyft_models
2023-02-06 15:33:02,861   INFO  Database filter by min points Car: 117109 => 116379
2023-02-06 15:33:02,864   INFO  Database filter by min points Pedestrian: 2931 => 2925
2023-02-06 15:33:02,865   INFO  Database filter by min points Cyclist: 3261 => 3231
2023-02-06 15:33:02,880   INFO  Database filter by difficulty Car: 116379 => 116379
2023-02-06 15:33:02,881   INFO  Database filter by difficulty Pedestrian: 2925 => 2925
2023-02-06 15:33:02,881   INFO  Database filter by difficulty Cyclist: 3231 => 3231
2023-02-06 15:33:02,902   INFO  Loading KITTI dataset
2023-02-06 15:33:03,242   INFO  Total samples for KITTI dataset: 11873
2023-02-06 15:33:12,061   INFO  DistributedDataParallel(
  (module): PointRCNN(
    (history_query): SparseResUQueryNet(
      (history_backbone): Res16UNet14E(
        (conv0p1s1): MinkowskiConvolution(in=1, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (bn0): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (conv1p1s2): MinkowskiConvolution(in=32, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block1): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
          )
        )
        (conv2p2s2): MinkowskiConvolution(in=32, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block2): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=32, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=32, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (conv3p4s2): MinkowskiConvolution(in=64, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn3): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block3): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=64, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=64, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (conv4p8s2): MinkowskiConvolution(in=128, out=128, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn4): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block4): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
          )
        )
        (convtr4p16s2): MinkowskiConvolutionTranspose(in=128, out=128, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr4): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block5): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=256, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=256, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (convtr5p8s2): MinkowskiConvolutionTranspose(in=128, out=96, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr5): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block6): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=160, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=160, out=96, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (convtr6p4s2): MinkowskiConvolutionTranspose(in=96, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr6): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block7): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=96, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=96, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (convtr7p2s2): MinkowskiConvolutionTranspose(in=64, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr7): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block8): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=96, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=96, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (relu): MinkowskiReLU()
        (final): MinkowskiConvolution(in=64, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      )
      (pool): MinkowskiMaxPooling(kernel_size=[1000, 1, 1, 1], stride=[1000, 1, 1, 1], dilation=[1, 1, 1, 1])
      (p2_backbone): Sequential(
        (0): Linear(in_features=68, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=1, bias=True)
      )
      (current_conv): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
    )
    (vfe): None
    (backbone_3d): PointNet2MSG(
      (SA_modules): ModuleList(
        (0): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(67, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(67, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (1): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(99, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(99, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (2): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(259, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 196, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(196, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(259, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 196, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(196, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (3): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(515, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(515, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(256, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(384, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
      )
      (FP_modules): ModuleList(
        (0): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
        (1): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(608, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
        (2): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
        (3): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(1536, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
      )
    )
    (map_to_bev_module): None
    (pfe): None
    (backbone_2d): None
    (dense_head): None
    (point_head): PointHeadBox(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (cls_layers): Sequential(
        (0): Linear(in_features=128, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (5): ReLU()
        (6): Linear(in_features=256, out_features=3, bias=True)
      )
      (box_layers): Sequential(
        (0): Linear(in_features=128, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (5): ReLU()
        (6): Linear(in_features=256, out_features=8, bias=True)
      )
    )
    (roi_head): PointRCNNHead(
      (proposal_target_layer): ProposalTargetLayer()
      (reg_loss_func): WeightedSmoothL1Loss()
      (SA_modules): ModuleList(
        (0): PointnetSAModule(
          (groupers): ModuleList(
            (0): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (1): PointnetSAModule(
          (groupers): ModuleList(
            (0): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (2): PointnetSAModule(
          (groupers): ModuleList(
            (0): GroupAll()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
      )
      (xyz_up_layer): Sequential(
        (0): Conv2d(5, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU()
        (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (3): ReLU()
      )
      (merge_down_layer): Sequential(
        (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU()
      )
      (cls_layers): Sequential(
        (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Dropout(p=0.0, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (6): ReLU()
        (7): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      )
      (reg_layers): Sequential(
        (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Dropout(p=0.0, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (6): ReLU()
        (7): Conv1d(256, 7, kernel_size=(1,), stride=(1,))
      )
      (roipoint_pool3d_layer): RoIPointPool3d()
    )
  )
)
2023-02-06 15:33:12,066   INFO  **********************Start training lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1(default)**********************
epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s]epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s]epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s]epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s][W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)

train:   0%|                                                                                     | 0/1485 [00:00<?, ?it/s][A[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)

train:   0%|                                                                           | 1/1485 [00:15<6:34:19, 15.94s/it][A
train:   0%|                                                               | 1/1485 [00:15<6:34:19, 15.94s/it, total_it=1][Aepochs:   0%|      | 0/60 [00:18<?, ?it/s, loss=1.03, lr=0.001, d_time=6.63(6.63), f_time=7.92(7.92), b_time=15.29(15.29)]epochs:   0%|      | 0/60 [00:18<?, ?it/s, loss=1.03, lr=0.001, d_time=6.63(6.63), f_time=7.92(7.92), b_time=15.29(15.29)]
train:   0%|                                                               | 2/1485 [00:18<3:16:21,  7.94s/it, total_it=1][A
train:   0%|                                                               | 2/1485 [00:18<3:16:21,  7.94s/it, total_it=2][Aepochs:   0%|        | 0/60 [00:20<?, ?it/s, loss=0.55, lr=0.001, d_time=0.00(3.31), f_time=1.45(4.69), b_time=2.18(8.73)]epochs:   0%|        | 0/60 [00:20<?, ?it/s, loss=0.55, lr=0.001, d_time=0.00(3.31), f_time=1.45(4.69), b_time=2.18(8.73)]
train:   0%|▏                                                              | 3/1485 [00:19<2:05:32,  5.08s/it, total_it=2][A
train:   0%|▏                                                              | 3/1485 [00:19<2:05:32,  5.08s/it, total_it=3][Aepochs:   0%|       | 0/60 [00:22<?, ?it/s, loss=0.647, lr=0.001, d_time=0.00(2.21), f_time=1.20(3.52), b_time=1.63(6.37)]epochs:   0%|       | 0/60 [00:22<?, ?it/s, loss=0.647, lr=0.001, d_time=0.00(2.21), f_time=1.20(3.52), b_time=1.63(6.37)]
train:   0%|▏                                                              | 4/1485 [00:21<1:33:59,  3.81s/it, total_it=3][A
train:   0%|▏                                                              | 4/1485 [00:21<1:33:59,  3.81s/it, total_it=4][Aepochs:   0%|       | 0/60 [00:23<?, ?it/s, loss=0.477, lr=0.001, d_time=0.00(1.66), f_time=1.25(2.96), b_time=1.84(5.24)]epochs:   0%|       | 0/60 [00:23<?, ?it/s, loss=0.477, lr=0.001, d_time=0.00(1.66), f_time=1.25(2.96), b_time=1.84(5.24)]
train:   0%|▏                                                              | 5/1485 [00:23<1:14:35,  3.02s/it, total_it=4][A
train:   0%|▏                                                              | 5/1485 [00:23<1:14:35,  3.02s/it, total_it=5][Aepochs:   0%|       | 0/60 [00:25<?, ?it/s, loss=0.461, lr=0.001, d_time=0.00(1.33), f_time=1.25(2.62), b_time=1.63(4.52)]epochs:   0%|       | 0/60 [00:25<?, ?it/s, loss=0.461, lr=0.001, d_time=0.00(1.33), f_time=1.25(2.62), b_time=1.63(4.52)]
train:   0%|▎                                                              | 6/1485 [00:25<1:03:58,  2.60s/it, total_it=5][A
train:   0%|▎                                                              | 6/1485 [00:25<1:03:58,  2.60s/it, total_it=6][Aepochs:   0%|       | 0/60 [00:27<?, ?it/s, loss=0.472, lr=0.001, d_time=0.00(1.11), f_time=1.11(2.36), b_time=1.76(4.06)]epochs:   0%|       | 0/60 [00:27<?, ?it/s, loss=0.472, lr=0.001, d_time=0.00(1.11), f_time=1.11(2.36), b_time=1.76(4.06)]
train:   0%|▎                                                                | 7/1485 [00:26<55:29,  2.25s/it, total_it=6][A
train:   0%|▎                                                                | 7/1485 [00:26<55:29,  2.25s/it, total_it=7][Aepochs:   0%|       | 0/60 [00:28<?, ?it/s, loss=0.441, lr=0.001, d_time=0.00(0.95), f_time=1.26(2.21), b_time=1.55(3.70)]epochs:   0%|       | 0/60 [00:28<?, ?it/s, loss=0.441, lr=0.001, d_time=0.00(0.95), f_time=1.26(2.21), b_time=1.55(3.70)]
train:   1%|▎                                                                | 8/1485 [00:28<53:09,  2.16s/it, total_it=7][A
train:   1%|▎                                                                | 8/1485 [00:28<53:09,  2.16s/it, total_it=8][Aepochs:   0%|       | 0/60 [00:30<?, ?it/s, loss=0.565, lr=0.001, d_time=0.00(0.83), f_time=0.97(2.05), b_time=1.61(3.44)]epochs:   0%|       | 0/60 [00:30<?, ?it/s, loss=0.565, lr=0.001, d_time=0.00(0.83), f_time=0.97(2.05), b_time=1.61(3.44)]
train:   1%|▍                                                                | 9/1485 [00:30<49:45,  2.02s/it, total_it=8][A
train:   1%|▍                                                                | 9/1485 [00:30<49:45,  2.02s/it, total_it=9][Aepochs:   0%|       | 0/60 [00:32<?, ?it/s, loss=0.436, lr=0.001, d_time=0.00(0.74), f_time=0.96(1.93), b_time=1.65(3.24)]epochs:   0%|       | 0/60 [00:32<?, ?it/s, loss=0.436, lr=0.001, d_time=0.00(0.74), f_time=0.96(1.93), b_time=1.65(3.24)]
train:   1%|▍                                                               | 10/1485 [00:32<46:35,  1.90s/it, total_it=9][A
train:   1%|▍                                                              | 10/1485 [00:32<46:35,  1.90s/it, total_it=10][Aepochs:   0%|       | 0/60 [00:34<?, ?it/s, loss=0.329, lr=0.001, d_time=0.00(0.66), f_time=1.15(1.85), b_time=1.56(3.07)]epochs:   0%|       | 0/60 [00:34<?, ?it/s, loss=0.329, lr=0.001, d_time=0.00(0.66), f_time=1.15(1.85), b_time=1.56(3.07)]
train:   1%|▍                                                              | 11/1485 [00:33<44:46,  1.82s/it, total_it=10][A
train:   1%|▍                                                              | 11/1485 [00:33<44:46,  1.82s/it, total_it=11][Aepochs:   0%|       | 0/60 [00:35<?, ?it/s, loss=0.315, lr=0.001, d_time=0.00(0.60), f_time=1.08(1.78), b_time=1.64(2.94)]epochs:   0%|       | 0/60 [00:35<?, ?it/s, loss=0.315, lr=0.001, d_time=0.00(0.60), f_time=1.08(1.78), b_time=1.64(2.94)]
train:   1%|▌                                                              | 12/1485 [00:35<43:44,  1.78s/it, total_it=11][A
train:   1%|▌                                                              | 12/1485 [00:35<43:44,  1.78s/it, total_it=12][Aepochs:   0%|       | 0/60 [00:37<?, ?it/s, loss=0.382, lr=0.001, d_time=0.00(0.55), f_time=0.99(1.72), b_time=1.61(2.83)]epochs:   0%|       | 0/60 [00:37<?, ?it/s, loss=0.382, lr=0.001, d_time=0.00(0.55), f_time=0.99(1.72), b_time=1.61(2.83)]
train:   1%|▌                                                              | 13/1485 [00:37<45:06,  1.84s/it, total_it=12][A
train:   1%|▌                                                              | 13/1485 [00:37<45:06,  1.84s/it, total_it=13][Aepochs:   0%|       | 0/60 [00:39<?, ?it/s, loss=0.308, lr=0.001, d_time=0.00(0.51), f_time=1.07(1.67), b_time=1.81(2.75)]epochs:   0%|       | 0/60 [00:39<?, ?it/s, loss=0.308, lr=0.001, d_time=0.00(0.51), f_time=1.07(1.67), b_time=1.81(2.75)]
train:   1%|▌                                                              | 14/1485 [00:39<43:44,  1.78s/it, total_it=13][A
train:   1%|▌                                                              | 14/1485 [00:39<43:44,  1.78s/it, total_it=14][Aepochs:   0%|       | 0/60 [00:41<?, ?it/s, loss=0.294, lr=0.001, d_time=0.00(0.47), f_time=1.03(1.62), b_time=1.55(2.67)]epochs:   0%|       | 0/60 [00:41<?, ?it/s, loss=0.294, lr=0.001, d_time=0.00(0.47), f_time=1.03(1.62), b_time=1.55(2.67)]
train:   1%|▋                                                              | 15/1485 [00:40<42:02,  1.72s/it, total_it=14][A
train:   1%|▋                                                              | 15/1485 [00:40<42:02,  1.72s/it, total_it=15][Aepochs:   0%|       | 0/60 [00:42<?, ?it/s, loss=0.331, lr=0.001, d_time=0.00(0.44), f_time=1.09(1.59), b_time=1.50(2.59)]epochs:   0%|       | 0/60 [00:42<?, ?it/s, loss=0.331, lr=0.001, d_time=0.00(0.44), f_time=1.09(1.59), b_time=1.50(2.59)]
train:   1%|▋                                                              | 16/1485 [00:43<52:06,  2.13s/it, total_it=15][A
train:   1%|▋                                                              | 16/1485 [00:43<52:06,  2.13s/it, total_it=16][Aepochs:   0%|       | 0/60 [00:45<?, ?it/s, loss=0.284, lr=0.001, d_time=0.00(0.42), f_time=1.47(1.58), b_time=2.80(2.60)]epochs:   0%|       | 0/60 [00:45<?, ?it/s, loss=0.284, lr=0.001, d_time=0.00(0.42), f_time=1.47(1.58), b_time=2.80(2.60)]
train:   1%|▋                                                            | 17/1485 [00:49<1:16:59,  3.15s/it, total_it=16][A
train:   1%|▋                                                            | 17/1485 [00:49<1:16:59,  3.15s/it, total_it=17][Aepochs:   0%|       | 0/60 [00:51<?, ?it/s, loss=0.207, lr=0.001, d_time=0.01(0.39), f_time=4.91(1.77), b_time=5.48(2.77)]epochs:   0%|       | 0/60 [00:51<?, ?it/s, loss=0.207, lr=0.001, d_time=0.01(0.39), f_time=4.91(1.77), b_time=5.48(2.77)]
train:   1%|▋                                                            | 18/1485 [00:50<1:04:59,  2.66s/it, total_it=17][A
train:   1%|▋                                                            | 18/1485 [00:50<1:04:59,  2.66s/it, total_it=18][Aepochs:   0%|        | 0/60 [00:52<?, ?it/s, loss=0.28, lr=0.001, d_time=0.00(0.37), f_time=0.88(1.72), b_time=1.42(2.70)]epochs:   0%|        | 0/60 [00:52<?, ?it/s, loss=0.28, lr=0.001, d_time=0.00(0.37), f_time=0.88(1.72), b_time=1.42(2.70)]
train:   1%|▊                                                              | 19/1485 [00:52<59:37,  2.44s/it, total_it=18][A
train:   1%|▊                                                              | 19/1485 [00:52<59:37,  2.44s/it, total_it=19][Aepochs:   0%|       | 0/60 [00:54<?, ?it/s, loss=0.297, lr=0.001, d_time=0.00(0.35), f_time=1.30(1.70), b_time=1.92(2.66)]epochs:   0%|       | 0/60 [00:54<?, ?it/s, loss=0.297, lr=0.001, d_time=0.00(0.35), f_time=1.30(1.70), b_time=1.92(2.66)]
train:   1%|▊                                                            | 20/1485 [00:56<1:07:06,  2.75s/it, total_it=19][A
train:   1%|▊                                                            | 20/1485 [00:56<1:07:06,  2.75s/it, total_it=20][Aepochs:   0%|       | 0/60 [00:58<?, ?it/s, loss=0.248, lr=0.001, d_time=0.00(0.33), f_time=1.41(1.69), b_time=3.23(2.68)]epochs:   0%|       | 0/60 [00:58<?, ?it/s, loss=0.248, lr=0.001, d_time=0.00(0.33), f_time=1.41(1.69), b_time=3.23(2.68)]ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: -9) local_rank: 1 (pid: 250097) of binary: /home/tz98/anaconda3/envs/continual-da/bin/python
ERROR:torch.distributed.elastic.agent.server.local_elastic_agent:[default] Worker group failed
INFO:torch.distributed.elastic.agent.server.api:[default] Worker group FAILED. 3/3 attempts left; will restart worker group
INFO:torch.distributed.elastic.agent.server.api:[default] Stopping worker group
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous'ing worker group
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous complete for workers. Result:
  restart_count=1
  master_addr=localhost
  master_port=18024
  group_rank=0
  group_world_size=1
  local_ranks=[0, 1, 2, 3]
  role_ranks=[0, 1, 2, 3]
  global_ranks=[0, 1, 2, 3]
  role_world_sizes=[4, 4, 4, 4]
  global_world_sizes=[4, 4, 4, 4]

INFO:torch.distributed.elastic.agent.server.api:[default] Starting worker group
INFO:torch.distributed.elastic.multiprocessing:Setting worker0 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_1/0/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker1 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_1/1/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker2 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_1/2/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker3 reply file to: /tmp/torchelastic_l6a7uk0f/none_6r3qyjgx/attempt_1/3/error.json
+ NGPUS=4
+ PY_ARGS='--cfg_file cfgs/lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1.yaml'
+ true
+ PORT=11931
++ nc -z 127.0.0.1 11931
++ echo 1
+ status=1
+ '[' 1 '!=' 0 ']'
+ break
+ echo 11931
11931
+ python -m torch.distributed.launch --nproc_per_node=4 --rdzv_endpoint=localhost:11931 train.py --launcher pytorch --cfg_file cfgs/lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1.yaml
/home/tz98/anaconda3/envs/continual-da/lib/python3.8/site-packages/torch/distributed/launch.py:163: DeprecationWarning: The 'warn' method is deprecated, use 'warning' instead
  logger.warn(
The module torch.distributed.launch is deprecated and going to be removed in future.Migrate to torch.distributed.run
WARNING:torch.distributed.run:--use_env is deprecated and will be removed in future releases.
 Please read local_rank from `os.environ('LOCAL_RANK')` instead.
INFO:torch.distributed.launcher.api:Starting elastic_operator with launch configs:
  entrypoint       : train.py
  min_nodes        : 1
  max_nodes        : 1
  nproc_per_node   : 4
  run_id           : none
  rdzv_backend     : static
  rdzv_endpoint    : localhost:11931
  rdzv_configs     : {'rank': 0, 'timeout': 900}
  max_restarts     : 3
  monitor_interval : 5
  log_dir          : None
  metrics_cfg      : {}

INFO:torch.distributed.elastic.agent.server.local_elastic_agent:log directory set to: /tmp/torchelastic_qg34tkvw/none_rmlwccmy
INFO:torch.distributed.elastic.agent.server.api:[default] starting workers for entrypoint: python
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous'ing worker group
/home/tz98/anaconda3/envs/continual-da/lib/python3.8/site-packages/torch/distributed/elastic/utils/store.py:52: FutureWarning: This is an experimental API and will be changed in future.
  warnings.warn(
INFO:torch.distributed.elastic.agent.server.api:[default] Rendezvous complete for workers. Result:
  restart_count=0
  master_addr=localhost
  master_port=11931
  group_rank=0
  group_world_size=1
  local_ranks=[0, 1, 2, 3]
  role_ranks=[0, 1, 2, 3]
  global_ranks=[0, 1, 2, 3]
  role_world_sizes=[4, 4, 4, 4]
  global_world_sizes=[4, 4, 4, 4]

INFO:torch.distributed.elastic.agent.server.api:[default] Starting worker group
INFO:torch.distributed.elastic.multiprocessing:Setting worker0 reply file to: /tmp/torchelastic_qg34tkvw/none_rmlwccmy/attempt_0/0/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker1 reply file to: /tmp/torchelastic_qg34tkvw/none_rmlwccmy/attempt_0/1/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker2 reply file to: /tmp/torchelastic_qg34tkvw/none_rmlwccmy/attempt_0/2/error.json
INFO:torch.distributed.elastic.multiprocessing:Setting worker3 reply file to: /tmp/torchelastic_qg34tkvw/none_rmlwccmy/attempt_0/3/error.json
2023-02-06 15:36:23,692   INFO  **********************Start logging**********************
2023-02-06 15:36:23,692   INFO  CUDA_VISIBLE_DEVICES=0,1,2,3
2023-02-06 15:36:23,692   INFO  total_batch_size: 8
2023-02-06 15:36:23,692   INFO  cfg_file         cfgs/lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1.yaml
2023-02-06 15:36:23,692   INFO  batch_size       2
2023-02-06 15:36:23,692   INFO  epochs           60
2023-02-06 15:36:23,692   INFO  workers          4
2023-02-06 15:36:23,692   INFO  extra_tag        default
2023-02-06 15:36:23,693   INFO  ckpt             None
2023-02-06 15:36:23,693   INFO  pretrained_model None
2023-02-06 15:36:23,693   INFO  launcher         pytorch
2023-02-06 15:36:23,693   INFO  tcp_port         18888
2023-02-06 15:36:23,693   INFO  sync_bn          False
2023-02-06 15:36:23,693   INFO  fix_random_seed  False
2023-02-06 15:36:23,693   INFO  ckpt_save_interval 10
2023-02-06 15:36:23,693   INFO  local_rank       0
2023-02-06 15:36:23,693   INFO  max_ckpt_save_num 30
2023-02-06 15:36:23,693   INFO  merge_all_iters_to_one_epoch False
2023-02-06 15:36:23,693   INFO  set_cfgs         None
2023-02-06 15:36:23,693   INFO  empty_cache_every -1
2023-02-06 15:36:23,693   INFO  max_waiting_mins 0
2023-02-06 15:36:23,693   INFO  start_epoch      0
2023-02-06 15:36:23,693   INFO  num_epochs_to_eval 0
2023-02-06 15:36:23,693   INFO  save_to_file     False
2023-02-06 15:36:23,693   INFO  wandb_project    None
2023-02-06 15:36:23,693   INFO  wandb_group      None
2023-02-06 15:36:23,693   INFO  hq_path          None
2023-02-06 15:36:23,693   INFO  cfg.ROOT_DIR: /home/tz98/projects/continual-DA/downstream/OpenPCDet
2023-02-06 15:36:23,693   INFO  cfg.LOCAL_RANK: 0
2023-02-06 15:36:23,693   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2023-02-06 15:36:23,693   INFO  
cfg.DATA_CONFIG = edict()
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/lyft
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 90.4, 40, 1]
2023-02-06 15:36:23,693   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2023-02-06 15:36:23,693   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2023-02-06 15:36:23,693   INFO  
cfg.DATA_CONFIG.LOAD_HISTORY = edict()
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.DATA_PATH: ../data/lyft/training/combined_lidar
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.LIMIT_NUM: 5
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.TRANS_MAT_PATH: ../data/lyft/training/trans_mat
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.VOXEL_SIZE: -1
2023-02-06 15:36:23,693   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.FORWARD_ONLY: True
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.CACHE_ROOT: /scratch/hindsight_travis_cache/
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.LOAD_HISTORY.HISTORY_AUG: True
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points', 'p2_score', 'history_scans']
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2023-02-06 15:36:23,694   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': []}, 'VALIDATE_NUM_POINT_LIMIT': {'Car': 10, 'Pedestrian': 3, 'Cyclist': 3}, 'SAMPLE_GROUPS': ['Car:10', 'Pedestrian:5', 'Cyclist:5'], 'VALIDATE_EXTRA_OFFSET': [0.0, 0.0, 0.2], 'VALIDATE_EXTRA_WIDTH': [0.3, 0.3, 0.5], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}, {'NAME': 'point_quantize', 'VOXEL_SIZE': 0.3}]
2023-02-06 15:36:23,694   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'sample_points', 'NUM_POINTS': {'train': 16384, 'test': 16384}}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}]
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/lyft_dataset_hindsight.yaml
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.load_p2_score: /home/yy785/datasets/lyft_release_test/training/pp_score_fw70_2m_r0.3
2023-02-06 15:36:23,694   INFO  cfg.DATA_CONFIG.load_p2_test_score: /home/yy785/datasets/lyft_release_test/training/pp_score_fw70_2m_r0.3_test
2023-02-06 15:36:23,694   INFO  
cfg.MODEL = edict()
2023-02-06 15:36:23,694   INFO  cfg.MODEL.NAME: PointRCNN
2023-02-06 15:36:23,694   INFO  
cfg.MODEL.HISTORY_QUERY = edict()
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.NAME: SparseResUQueryNet
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone: Res16UNet14E
2023-02-06 15:36:23,694   INFO  
cfg.MODEL.HISTORY_QUERY.history_backbone_config = edict()
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone_config.bn_momentum: 0.05
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone_config.conv1_kernel_size: 3
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.history_backbone_config.final_feature_size: 64
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.simple_conv_kernel_size: 5
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.extra_conv: False
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.mode: update_point_features
2023-02-06 15:36:23,694   INFO  
cfg.MODEL.HISTORY_QUERY.P2_LOSS_CONFIG = edict()
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.P2_LOSS_CONFIG.LOSS_FN: l1
2023-02-06 15:36:23,694   INFO  cfg.MODEL.HISTORY_QUERY.TWO_STAGE: pt1
2023-02-06 15:36:23,694   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2023-02-06 15:36:23,694   INFO  cfg.MODEL.BACKBONE_3D.NAME: PointNet2MSG
2023-02-06 15:36:23,694   INFO  
cfg.MODEL.BACKBONE_3D.SA_CONFIG = edict()
2023-02-06 15:36:23,694   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.NPOINTS: [4096, 1024, 256, 64]
2023-02-06 15:36:23,694   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.RADIUS: [[0.1, 0.5], [0.5, 1.0], [1.0, 2.0], [2.0, 4.0]]
2023-02-06 15:36:23,694   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.NSAMPLE: [[16, 32], [16, 32], [16, 32], [16, 32]]
2023-02-06 15:36:23,694   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.MLPS: [[[16, 16, 32], [32, 32, 64]], [[64, 64, 128], [64, 96, 128]], [[128, 196, 256], [128, 196, 256]], [[256, 256, 512], [256, 384, 512]]]
2023-02-06 15:36:23,694   INFO  cfg.MODEL.BACKBONE_3D.FP_MLPS: [[128, 128], [256, 256], [512, 512], [512, 512]]
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.POINT_HEAD = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.NAME: PointHeadBox
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.CLS_FC: [256, 256]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.REG_FC: [256, 256]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.CLASS_AGNOSTIC: False
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.USE_POINT_FEATURES_BEFORE_FUSION: False
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER: PointResidualCoder
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.use_mean_size: True
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.mean_size: [[3.9, 1.6, 1.56], [0.8, 0.6, 1.73], [1.76, 0.6, 1.73]]
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_REG: WeightedSmoothL1Loss
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_box_weight: 1.0
2023-02-06 15:36:23,695   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.ROI_HEAD = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.NAME: PointRCNNHead
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.ROI_HEAD.ROI_POINT_POOL = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.POOL_EXTRA_WIDTH: [0.0, 0.0, 0.0]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.NUM_SAMPLED_POINTS: 512
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.DEPTH_NORMALIZER: 70.0
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.XYZ_UP_LAYER: [128, 128]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [256, 256]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [256, 256]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.0
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.USE_BN: False
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.ROI_HEAD.SA_CONFIG = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.NPOINTS: [128, 32, -1]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.RADIUS: [0.2, 0.4, 100]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.NSAMPLE: [16, 16, 16]
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.MLPS: [[128, 128, 128], [128, 128, 256], [256, 256, 512]]
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG = edict()
2023-02-06 15:36:23,695   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN = edict()
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2023-02-06 15:36:23,695   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2023-02-06 15:36:23,696   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST = edict()
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 9000
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.85
2023-02-06 15:36:23,696   INFO  
cfg.MODEL.ROI_HEAD.TARGET_CONFIG = edict()
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: cls
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.6
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.45
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2023-02-06 15:36:23,696   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG = edict()
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2023-02-06 15:36:23,696   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2023-02-06 15:36:23,696   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-02-06 15:36:23,696   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2023-02-06 15:36:23,696   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-02-06 15:36:23,696   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-02-06 15:36:23,696   INFO  
cfg.OPTIMIZATION = edict()
2023-02-06 15:36:23,696   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 2
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 60
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.LR: 0.01
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2023-02-06 15:36:23,697   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2023-02-06 15:36:23,697   INFO  cfg.TAG: pointrcnn_hindsight_p2_2staged_train_pt1
2023-02-06 15:36:23,697   INFO  cfg.EXP_GROUP_PATH: lyft_models
2023-02-06 15:36:25,382   INFO  Database filter by min points Car: 117109 => 116379
2023-02-06 15:36:25,385   INFO  Database filter by min points Pedestrian: 2931 => 2925
2023-02-06 15:36:25,386   INFO  Database filter by min points Cyclist: 3261 => 3231
2023-02-06 15:36:25,400   INFO  Database filter by difficulty Car: 116379 => 116379
2023-02-06 15:36:25,400   INFO  Database filter by difficulty Pedestrian: 2925 => 2925
2023-02-06 15:36:25,401   INFO  Database filter by difficulty Cyclist: 3231 => 3231
2023-02-06 15:36:25,433   INFO  Loading KITTI dataset
2023-02-06 15:36:26,120   INFO  Total samples for KITTI dataset: 11873
epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s]epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s]epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s]2023-02-06 15:37:13,456   INFO  DistributedDataParallel(
  (module): PointRCNN(
    (history_query): SparseResUQueryNet(
      (history_backbone): Res16UNet14E(
        (conv0p1s1): MinkowskiConvolution(in=1, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (bn0): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (conv1p1s2): MinkowskiConvolution(in=32, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block1): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
          )
        )
        (conv2p2s2): MinkowskiConvolution(in=32, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn2): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block2): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=32, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=32, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (conv3p4s2): MinkowskiConvolution(in=64, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn3): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block3): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=64, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=64, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (conv4p8s2): MinkowskiConvolution(in=128, out=128, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bn4): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block4): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
          )
        )
        (convtr4p16s2): MinkowskiConvolutionTranspose(in=128, out=128, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr4): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block5): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=256, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=256, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (convtr5p8s2): MinkowskiConvolutionTranspose(in=128, out=96, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr5): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block6): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=160, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=96, out=96, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=160, out=96, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(96, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (convtr6p4s2): MinkowskiConvolutionTranspose(in=96, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr6): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block7): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=96, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=96, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (convtr7p2s2): MinkowskiConvolutionTranspose(in=64, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (bntr7): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
        (block8): Sequential(
          (0): BasicBlock(
            (conv1): MinkowskiConvolution(in=96, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
            (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): MinkowskiReLU()
            (downsample): Sequential(
              (0): MinkowskiConvolution(in=96, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
              (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.05, affine=True, track_running_stats=True)
            )
          )
        )
        (relu): MinkowskiReLU()
        (final): MinkowskiConvolution(in=64, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      )
      (pool): MinkowskiMaxPooling(kernel_size=[1000, 1, 1, 1], stride=[1000, 1, 1, 1], dilation=[1, 1, 1, 1])
      (p2_backbone): Sequential(
        (0): Linear(in_features=68, out_features=32, bias=True)
        (1): ReLU()
        (2): Linear(in_features=32, out_features=1, bias=True)
      )
      (current_conv): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
    )
    (vfe): None
    (backbone_3d): PointNet2MSG(
      (SA_modules): ModuleList(
        (0): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(67, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(67, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (1): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(99, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(99, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (2): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(259, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 196, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(196, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(259, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 196, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(196, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (3): PointnetSAModuleMSG(
          (groupers): ModuleList(
            (0): QueryAndGroup()
            (1): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(515, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
            (1): Sequential(
              (0): Conv2d(515, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(256, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(384, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
      )
      (FP_modules): ModuleList(
        (0): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
        (1): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(608, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
        (2): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
        (3): PointnetFPModule(
          (mlp): Sequential(
            (0): Conv2d(1536, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (2): ReLU()
            (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (5): ReLU()
          )
        )
      )
    )
    (map_to_bev_module): None
    (pfe): None
    (backbone_2d): None
    (dense_head): None
    (point_head): PointHeadBox(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (cls_layers): Sequential(
        (0): Linear(in_features=128, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (5): ReLU()
        (6): Linear(in_features=256, out_features=3, bias=True)
      )
      (box_layers): Sequential(
        (0): Linear(in_features=128, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (5): ReLU()
        (6): Linear(in_features=256, out_features=8, bias=True)
      )
    )
    (roi_head): PointRCNNHead(
      (proposal_target_layer): ProposalTargetLayer()
      (reg_loss_func): WeightedSmoothL1Loss()
      (SA_modules): ModuleList(
        (0): PointnetSAModule(
          (groupers): ModuleList(
            (0): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (1): PointnetSAModule(
          (groupers): ModuleList(
            (0): QueryAndGroup()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
        (2): PointnetSAModule(
          (groupers): ModuleList(
            (0): GroupAll()
          )
          (mlps): ModuleList(
            (0): Sequential(
              (0): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (2): ReLU()
              (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (5): ReLU()
              (6): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
              (8): ReLU()
            )
          )
        )
      )
      (xyz_up_layer): Sequential(
        (0): Conv2d(5, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU()
        (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (3): ReLU()
      )
      (merge_down_layer): Sequential(
        (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU()
      )
      (cls_layers): Sequential(
        (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Dropout(p=0.0, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (6): ReLU()
        (7): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      )
      (reg_layers): Sequential(
        (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (2): ReLU()
        (3): Dropout(p=0.0, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (6): ReLU()
        (7): Conv1d(256, 7, kernel_size=(1,), stride=(1,))
      )
      (roipoint_pool3d_layer): RoIPointPool3d()
    )
  )
)
2023-02-06 15:37:13,465   INFO  **********************Start training lyft_models/pointrcnn_hindsight_p2_2staged_train_pt1(default)**********************
epochs:   0%|                                                                                      | 0/60 [00:00<?, ?it/s][W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)

train:   0%|                                                                                     | 0/1485 [00:00<?, ?it/s][A[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:90] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)

train:   0%|                                                                          | 1/1485 [00:25<10:26:19, 25.32s/it][A
train:   0%|                                                              | 1/1485 [00:25<10:26:19, 25.32s/it, total_it=1][Aepochs:   0%|   | 0/60 [00:28<?, ?it/s, loss=0.606, lr=0.001, d_time=7.39(7.39), f_time=11.77(11.77), b_time=25.14(25.14)]epochs:   0%|   | 0/60 [00:28<?, ?it/s, loss=0.606, lr=0.001, d_time=7.39(7.39), f_time=11.77(11.77), b_time=25.14(25.14)]
train:   0%|                                                               | 2/1485 [00:33<6:16:44, 15.24s/it, total_it=1][A
train:   0%|                                                               | 2/1485 [00:33<6:16:44, 15.24s/it, total_it=2][Aepochs:   0%|      | 0/60 [00:36<?, ?it/s, loss=0.587, lr=0.001, d_time=0.00(3.69), f_time=2.78(7.28), b_time=8.00(16.57)]epochs:   0%|      | 0/60 [00:36<?, ?it/s, loss=0.587, lr=0.001, d_time=0.00(3.69), f_time=2.78(7.28), b_time=8.00(16.57)]
train:   0%|▏                                                              | 3/1485 [00:42<5:00:27, 12.16s/it, total_it=2][A
train:   0%|▏                                                              | 3/1485 [00:42<5:00:27, 12.16s/it, total_it=3][Aepochs:   0%|      | 0/60 [00:45<?, ?it/s, loss=0.544, lr=0.001, d_time=0.00(2.46), f_time=2.98(5.85), b_time=8.31(13.81)]epochs:   0%|      | 0/60 [00:45<?, ?it/s, loss=0.544, lr=0.001, d_time=0.00(2.46), f_time=2.98(5.85), b_time=8.31(13.81)]
train:   0%|▏                                                              | 4/1485 [00:48<4:03:43,  9.87s/it, total_it=3][A
train:   0%|▏                                                              | 4/1485 [00:48<4:03:43,  9.87s/it, total_it=4][Aepochs:   0%|      | 0/60 [00:51<?, ?it/s, loss=0.525, lr=0.001, d_time=0.00(1.85), f_time=2.48(5.00), b_time=6.17(11.90)]epochs:   0%|      | 0/60 [00:51<?, ?it/s, loss=0.525, lr=0.001, d_time=0.00(1.85), f_time=2.48(5.00), b_time=6.17(11.90)]
train:   0%|▏                                                              | 5/1485 [00:56<3:45:27,  9.14s/it, total_it=4][A
train:   0%|▏                                                              | 5/1485 [00:56<3:45:27,  9.14s/it, total_it=5][Aepochs:   0%|      | 0/60 [00:59<?, ?it/s, loss=0.438, lr=0.001, d_time=0.00(1.48), f_time=2.48(4.50), b_time=7.63(11.05)]epochs:   0%|      | 0/60 [00:59<?, ?it/s, loss=0.438, lr=0.001, d_time=0.00(1.48), f_time=2.48(4.50), b_time=7.63(11.05)]
train:   0%|▎                                                              | 6/1485 [01:04<3:33:59,  8.68s/it, total_it=5][A
train:   0%|▎                                                              | 6/1485 [01:04<3:33:59,  8.68s/it, total_it=6][Aepochs:   0%|      | 0/60 [01:07<?, ?it/s, loss=0.504, lr=0.001, d_time=0.00(1.23), f_time=2.58(4.18), b_time=7.60(10.47)]epochs:   0%|      | 0/60 [01:07<?, ?it/s, loss=0.504, lr=0.001, d_time=0.00(1.23), f_time=2.58(4.18), b_time=7.60(10.47)]
train:   0%|▎                                                              | 7/1485 [01:11<3:24:38,  8.31s/it, total_it=6][A
train:   0%|▎                                                              | 7/1485 [01:11<3:24:38,  8.31s/it, total_it=7][Aepochs:   0%|      | 0/60 [01:14<?, ?it/s, loss=0.321, lr=0.001, d_time=0.00(1.06), f_time=2.54(3.95), b_time=7.34(10.02)]epochs:   0%|      | 0/60 [01:14<?, ?it/s, loss=0.321, lr=0.001, d_time=0.00(1.06), f_time=2.54(3.95), b_time=7.34(10.02)]
train:   1%|▎                                                              | 8/1485 [01:19<3:22:39,  8.23s/it, total_it=7][A
train:   1%|▎                                                              | 8/1485 [01:19<3:22:39,  8.23s/it, total_it=8][Aepochs:   0%|       | 0/60 [01:22<?, ?it/s, loss=0.408, lr=0.001, d_time=0.00(0.92), f_time=2.65(3.78), b_time=7.88(9.76)]epochs:   0%|       | 0/60 [01:22<?, ?it/s, loss=0.408, lr=0.001, d_time=0.00(0.92), f_time=2.65(3.78), b_time=7.88(9.76)]
train:   1%|▍                                                              | 9/1485 [01:27<3:20:19,  8.14s/it, total_it=8][A
train:   1%|▍                                                              | 9/1485 [01:27<3:20:19,  8.14s/it, total_it=9][Aepochs:   0%|       | 0/60 [01:30<?, ?it/s, loss=0.458, lr=0.001, d_time=0.00(0.82), f_time=2.67(3.66), b_time=7.75(9.53)]epochs:   0%|       | 0/60 [01:30<?, ?it/s, loss=0.458, lr=0.001, d_time=0.00(0.82), f_time=2.67(3.66), b_time=7.75(9.53)]
train:   1%|▍                                                             | 10/1485 [01:34<3:14:46,  7.92s/it, total_it=9][A
train:   1%|▍                                                            | 10/1485 [01:34<3:14:46,  7.92s/it, total_it=10][Aepochs:   0%|       | 0/60 [01:38<?, ?it/s, loss=0.395, lr=0.001, d_time=0.00(0.74), f_time=2.56(3.55), b_time=7.24(9.30)]epochs:   0%|       | 0/60 [01:38<?, ?it/s, loss=0.395, lr=0.001, d_time=0.00(0.74), f_time=2.56(3.55), b_time=7.24(9.30)]
train:   1%|▍                                                            | 11/1485 [01:42<3:12:15,  7.83s/it, total_it=10][A
train:   1%|▍                                                            | 11/1485 [01:42<3:12:15,  7.83s/it, total_it=11][Aepochs:   0%|       | 0/60 [01:45<?, ?it/s, loss=0.295, lr=0.001, d_time=0.00(0.67), f_time=2.62(3.46), b_time=7.41(9.13)]epochs:   0%|       | 0/60 [01:45<?, ?it/s, loss=0.295, lr=0.001, d_time=0.00(0.67), f_time=2.62(3.46), b_time=7.41(9.13)]